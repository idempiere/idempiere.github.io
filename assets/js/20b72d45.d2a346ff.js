"use strict";(self.webpackChunkidempiere_id_github_io=self.webpackChunkidempiere_id_github_io||[]).push([[5291],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return r?o.createElement(h,a(a({ref:t},u),{},{components:r})):o.createElement(h,a({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9847:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const i={title:"Fork and Branch Git Workflow",sidebar_label:"Git Workflow",sidebar_position:2,description:"The recommended Git workflow for contributing to the iDempiere core repository"},a=void 0,l={unversionedId:"basic-development/contributing-to-core/git-workflow",id:"basic-development/contributing-to-core/git-workflow",title:"Fork and Branch Git Workflow",description:"The recommended Git workflow for contributing to the iDempiere core repository",source:"@site/docs/basic-development/contributing-to-core/git-workflow.md",sourceDirName:"basic-development/contributing-to-core",slug:"/basic-development/contributing-to-core/git-workflow",permalink:"/docs/basic-development/contributing-to-core/git-workflow",draft:!1,editUrl:"https://github.com/idempiere/idempiere.github.io/tree/main/docs/basic-development/contributing-to-core/git-workflow.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Fork and Branch Git Workflow",sidebar_label:"Git Workflow",sidebar_position:2,description:"The recommended Git workflow for contributing to the iDempiere core repository"},sidebar:"tutorialSidebar",previous:{title:"How to Contribute",permalink:"/docs/basic-development/contributing-to-core/how-to-contribute"},next:{title:"Changing the Database",permalink:"/docs/basic-development/contributing-to-core/changing-the-database"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Step-by-Step Workflow",id:"step-by-step-workflow",level:2},{value:"1. Fork the Repository",id:"1-fork-the-repository",level:3},{value:"2. Add the Upstream Remote",id:"2-add-the-upstream-remote",level:3},{value:"Create a Pull Request",id:"create-a-pull-request",level:2},{value:"3. Sync with upstream",id:"3-sync-with-upstream",level:3},{value:"4. Create a branch based on the JIRA ticket:",id:"4-create-a-branch-based-on-the-jira-ticket",level:3},{value:"5. Make and Commit Your Changes",id:"5-make-and-commit-your-changes",level:3},{value:"6. Push your changes to your fork",id:"6-push-your-changes-to-your-fork",level:3},{value:"7. Open a Pull Request (PR)",id:"7-open-a-pull-request-pr",level:3},{value:"Once your message is complete, click the <strong>&quot;Create pull request&quot;</strong> button to submit.",id:"once-your-message-is-complete-click-the-create-pull-request-button-to-submit",level:2},{value:"After approval",id:"after-approval",level:2},{value:"\u2705 Best Practices",id:"-best-practices",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This is the official Git workflow used by the iDempiere project.",(0,n.kt)("br",{parentName:"p"}),"\n","It follows a ",(0,n.kt)("strong",{parentName:"p"},"fork-and-branch model")," using GitHub pull requests and JIRA ticket tracking."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"The general process:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Fork the iDempiere repository on GitHub."),(0,n.kt)("li",{parentName:"ol"},"Create a feature branch for your changes."),(0,n.kt)("li",{parentName:"ol"},"Make commits that include the related JIRA ticket number."),(0,n.kt)("li",{parentName:"ol"},"Push the branch to your fork."),(0,n.kt)("li",{parentName:"ol"},"Submit a pull request (PR) to the main repository.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"step-by-step-workflow"},"Step-by-Step Workflow"),(0,n.kt)("h3",{id:"1-fork-the-repository"},"1. Fork the Repository"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Visit: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/idempiere/idempiere"},"https://github.com/idempiere/idempiere")),(0,n.kt)("li",{parentName:"ul"},"Click ",(0,n.kt)("strong",{parentName:"li"},"\u201cFork\u201d")," to create your own copy of the repository.")),(0,n.kt)("p",null,"Clone your fork locally:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/YOUR_USERNAME/idempiere.git\ncd idempiere\n")),(0,n.kt)("h3",{id:"2-add-the-upstream-remote"},"2. Add the Upstream Remote"),(0,n.kt)("p",null,"Link your local repository to the original project:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add upstream https://github.com/idempiere/idempiere.git\ngit branch --set-upstream-to=origin/master master\n")),(0,n.kt)("p",null,"To verify:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git remote -v\n")),(0,n.kt)("p",null,"The result should look like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"origin  git@github.com:YOUR_USERNAME/idempiere.git (fetch)\norigin  git@github.com:YOUR_USERNAME/idempiere.git (push)\nupstream    https://github.com/idempiere/idempiere.git (fetch)\nupstream    https://github.com/idempiere/idempiere.git (push)\n")),(0,n.kt)("p",null,"And now proceed to configure your development environment as explained in Installing iDempiere."),(0,n.kt)("h2",{id:"create-a-pull-request"},"Create a Pull Request"),(0,n.kt)("h3",{id:"3-sync-with-upstream"},"3. Sync with upstream"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout master\ngit pull upstream master\n# here is usually a good practice to execute\n# bash RUN_SyncDBDev.sh\n# to keep your local database in sync with the code\ngit push origin master\n")),(0,n.kt)("h3",{id:"4-create-a-branch-based-on-the-jira-ticket"},"4. Create a branch based on the JIRA ticket:"),(0,n.kt)("p",null,"Every commit must be done in a feature branch created for the specific ticket."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b IDEMPIERE-(Jira-ticket-number)-(optional-additional-info)\n")),(0,n.kt)("admonition",{type:"danger"},(0,n.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"\ud83d\udeab Never Commit Directly to ",(0,n.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"master")),(0,n.kt)("p",{parentName:"admonition"},"Always create a separate branch for your changes.",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Do not commit directly to the ",(0,n.kt)("inlineCode",{parentName:"strong"},"master")," branch"),", even in your own fork."),(0,n.kt)("p",{parentName:"admonition"},"This helps maintain a clean Git history, prevents accidental overwrites, and ensures your pull requests are easy to manage and review.")),(0,n.kt)("p",null,"Use the ticket number and a short, descriptive title."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"5-make-and-commit-your-changes"},"5. Make and Commit Your Changes"),(0,n.kt)("p",null,"Make your changes and commit them with a JIRA-linked message:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "IDEMPIERE-1234: Fix NPE on login page"\n')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 ",(0,n.kt)("strong",{parentName:"p"},"Always include the JIRA ticket number")," in your commit message. This ensures automatic linking and tracking.")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"6-push-your-changes-to-your-fork"},"6. Push your changes to your fork"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin IDEMPIERE-1234-short-description\n")),(0,n.kt)("h3",{id:"7-open-a-pull-request-pr"},"7. Open a Pull Request (PR)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Go to your fork on GitHub."),(0,n.kt)("li",{parentName:"ul"},"Click ",(0,n.kt)("strong",{parentName:"li"},"\u201cCompare & pull request\u201d"),".")),(0,n.kt)("p",null,"To enable easy navigation between your pull request and the corresponding JIRA ticket, ",(0,n.kt)("strong",{parentName:"p"},"please include the JIRA ticket link as the first line of your pull request message"),"."),(0,n.kt)("p",null,"Below the link, write a clear and concise description that includes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The purpose and impact of the changes  "),(0,n.kt)("li",{parentName:"ul"},"Tests you performed for your use case  "),(0,n.kt)("li",{parentName:"ul"},"Any other use cases that may be affected")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The more detail you provide about the change and how to verify it, the easier it will be for peer reviewers to understand and approve your contribution.")),(0,n.kt)("h2",{id:"once-your-message-is-complete-click-the-create-pull-request-button-to-submit"},"Once your message is complete, click the ",(0,n.kt)("strong",{parentName:"h2"},'"Create pull request"')," button to submit."),(0,n.kt)("h2",{id:"after-approval"},"After approval"),(0,n.kt)("p",null,"To sync your fork with the latest iDempiere changes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git fetch upstream\ngit checkout main\ngit merge upstream/main\ngit push origin main\n")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"-best-practices"},"\u2705 Best Practices"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Create one branch per feature or fix."),(0,n.kt)("li",{parentName:"ul"},"Keep commit messages short and descriptive."),(0,n.kt)("li",{parentName:"ul"},"Rebase instead of merging to keep history clean."),(0,n.kt)("li",{parentName:"ul"},"Respond promptly to review feedback.")),(0,n.kt)("hr",null),(0,n.kt)("p",null,"By following this workflow, your contributions will be easier to review, test, and merge.",(0,n.kt)("br",{parentName:"p"}),"\n","It also ensures consistency across all developers and protects the integrity of the core project."))}m.isMDXComponent=!0}}]);