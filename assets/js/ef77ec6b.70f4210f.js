"use strict";(self.webpackChunkidempiere_id_github_io=self.webpackChunkidempiere_id_github_io||[]).push([[4757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=m(n),b=o,d=p["".concat(l,".").concat(b)]||p[b]||u[b]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},4447:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const a={title:"Common Issues",sidebar_label:"Common Issues",description:"Common problems and mistakes to avoid when contributing",sidebar_position:4},i=void 0,s={unversionedId:"basic-development/contributing-to-core/common-issues",id:"basic-development/contributing-to-core/common-issues",title:"Common Issues",description:"Common problems and mistakes to avoid when contributing",source:"@site/docs/basic-development/contributing-to-core/common-issues.md",sourceDirName:"basic-development/contributing-to-core",slug:"/basic-development/contributing-to-core/common-issues",permalink:"/docs/basic-development/contributing-to-core/common-issues",draft:!1,editUrl:"https://github.com/idempiere/idempiere.github.io/tree/main/docs/basic-development/contributing-to-core/common-issues.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Common Issues",sidebar_label:"Common Issues",description:"Common problems and mistakes to avoid when contributing",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Changing the Database",permalink:"/docs/basic-development/contributing-to-core/changing-the-database"},next:{title:"Basic Primers",permalink:"/docs/category/basic-primers"}},l={},m=[],c={toc:m},p="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To maintain iDempiere's high standards, avoid the following common issues:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Database compatibility"),": Your changes must work on both PostgreSQL and Oracle.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Breakage of existing features"),": Do not break previous functionality \u2014 test thoroughly.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Backward compatibility"),': Even "unused" fields may be used by implementers.')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Language"),": All code (comments, methods, variables) ",(0,o.kt)("strong",{parentName:"p"},"must be in English"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Comments and clarity"),":  "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Comment unclear logic."),(0,o.kt)("li",{parentName:"ul"},"Excessive need for comments may indicate poor naming or logic."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Documentation"),":",(0,o.kt)("br",{parentName:"p"}),"\n","Large or complex changes should come with:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Use cases"),(0,o.kt)("li",{parentName:"ul"},"Test instructions"),(0,o.kt)("li",{parentName:"ul"},"Unit tests"),(0,o.kt)("li",{parentName:"ul"},"Manual documentation if applicable"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Refactoring + new features"),": Avoid combining both in the same pull request \u2014 separate them for clarity.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"SQL-first approach"),":  Avoid raw SQL where possible \u2014 prefer model classes or queries."))),(0,o.kt)("hr",null),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 Remember: contributing is about maintaining and growing a community. Code that only works for your use case without care for quality, clarity, or compatibility weakens the project for everyone.")))}u.isMDXComponent=!0}}]);