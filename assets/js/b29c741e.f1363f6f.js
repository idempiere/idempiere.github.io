"use strict";(self.webpackChunkidempiere_id_github_io=self.webpackChunkidempiere_id_github_io||[]).push([[7312],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,v=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(v,l(l({ref:t},d),{},{components:n})):a.createElement(v,l({ref:t},d))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2128:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={title:"Developing Plug-in Event Handlers",sidebar_label:"Event Handlers",description:"Learn how to implement event handlers in iDempiere plug-ins to intercept and respond to model events.",sidebar_position:6},l="Developing Plug-in Event Handlers",o={unversionedId:"basic-development/plugin-development/plugin-eventhandler",id:"basic-development/plugin-development/plugin-eventhandler",title:"Developing Plug-in Event Handlers",description:"Learn how to implement event handlers in iDempiere plug-ins to intercept and respond to model events.",source:"@site/docs/basic-development/plugin-development/plugin-eventhandler.md",sourceDirName:"basic-development/plugin-development",slug:"/basic-development/plugin-development/plugin-eventhandler",permalink:"/docs/basic-development/plugin-development/plugin-eventhandler",draft:!1,editUrl:"https://github.com/idempiere/idempiere.github.io/tree/main/docs/basic-development/plugin-development/plugin-eventhandler.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Developing Plug-in Event Handlers",sidebar_label:"Event Handlers",description:"Learn how to implement event handlers in iDempiere plug-ins to intercept and respond to model events.",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Callouts",permalink:"/docs/basic-development/plugin-development/plugin-callouts"},next:{title:"Basic Primers",permalink:"/docs/category/basic-primers"}},p={},s=[{value:"\ud83c\udfaf Goal",id:"-goal",level:2},{value:"What is an Event Handler?",id:"what-is-an-event-handler",level:3},{value:"Event Handlers vs Callouts",id:"event-handlers-vs-callouts",level:3},{value:"\u2705 Prerequisites",id:"-prerequisites",level:2},{value:"\ud83d\udccb Overview",id:"-overview",level:2},{value:"\ud83d\udccb Implementation Methods",id:"-implementation-methods",level:2},{value:"Modern Approach (iDempiere 9+): Event Annotation",id:"modern-approach-idempiere-9-event-annotation",level:3},{value:"Creating an Event Handler Class",id:"creating-an-event-handler-class",level:3},{value:"Step 1: Extend AbstractEventHandler",id:"step-1-extend-abstracteventhandler",level:4},{value:"Step 2: Override Required Methods",id:"step-2-override-required-methods",level:4},{value:"Model (PO) Events",id:"model-po-events",level:5},{value:"Document Events",id:"document-events",level:5},{value:"Import Events",id:"import-events",level:5},{value:"Process Events",id:"process-events",level:5},{value:"System Events",id:"system-events",level:5},{value:"\ud83d\udd27 Registering as an OSGi Component",id:"-registering-as-an-osgi-component",level:2},{value:"Option A: Using Annotations (Recommended)",id:"option-a-using-annotations-recommended",level:3},{value:"Option B: Manual Component Definition",id:"option-b-manual-component-definition",level:3},{value:"Step 1: Create OSGI-INF Directory",id:"step-1-create-osgi-inf-directory",level:4},{value:"Step 2: Create Component Definition XML",id:"step-2-create-component-definition-xml",level:4},{value:"Step 3: Update MANIFEST.MF",id:"step-3-update-manifestmf",level:4},{value:"Step 4: Enable Plugin Activation",id:"step-4-enable-plugin-activation",level:4},{value:"Step 5: Update build.properties",id:"step-5-update-buildproperties",level:4},{value:"\ud83e\uddea Testing Your Event Handler",id:"-testing-your-event-handler",level:2},{value:"\ud83d\udce6 Exporting Your Plug-in",id:"-exporting-your-plug-in",level:2},{value:"\ud83c\udfa5 Video Tutorial",id:"-video-tutorial",level:2},{value:"\ud83d\udd17 Related Resources",id:"-related-resources",level:2}],d={toc:s},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"developing-plug-in-event-handlers"},"Developing Plug-in Event Handlers"),(0,r.kt)("h2",{id:"-goal"},"\ud83c\udfaf Goal"),(0,r.kt)("p",null,"This tutorial shows you how to develop ",(0,r.kt)("strong",{parentName:"p"},"event handlers")," in your own plug-in, enabling you to intercept and respond to data model events throughout the iDempiere system."),(0,r.kt)("h3",{id:"what-is-an-event-handler"},"What is an Event Handler?"),(0,r.kt)("p",null,"An ",(0,r.kt)("strong",{parentName:"p"},"event handler")," is a component that listens to and responds to events triggered by changes to data models (tables) in iDempiere. Event handlers are executed whenever records are created, updated, or deleted, regardless of how the change was initiated."),(0,r.kt)("p",null,"Event handlers are commonly used to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Validate data")," across all entry points (UI, REST API, processes, imports)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Enforce business rules")," that must apply system-wide"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Trigger automated actions")," when data changes (e.g., send notifications, update related records)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Maintain data integrity")," through cross-table validations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Audit and log")," specific operations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Integrate with external systems")," when data changes")),(0,r.kt)("p",null,"For example, when a Sales Order is completed, an event handler can automatically create a shipment, send a notification email, or update inventory levels."),(0,r.kt)("h3",{id:"event-handlers-vs-callouts"},"Event Handlers vs Callouts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Feature"),(0,r.kt)("th",{parentName:"tr",align:null},"Event Handler"),(0,r.kt)("th",{parentName:"tr",align:null},"Callout"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Scope")),(0,r.kt)("td",{parentName:"tr",align:null},"All operations (UI, API, processes, imports)"),(0,r.kt)("td",{parentName:"tr",align:null},"UI and CSV Importer only")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Execution Point")),(0,r.kt)("td",{parentName:"tr",align:null},"Before/after database operations"),(0,r.kt)("td",{parentName:"tr",align:null},"During field value changes in UI")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Use Case")),(0,r.kt)("td",{parentName:"tr",align:null},"System-wide business rules and validations"),(0,r.kt)("td",{parentName:"tr",align:null},"UI-specific field interactions")))),(0,r.kt)("admonition",{title:"When to Use Event Handlers",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Use ",(0,r.kt)("strong",{parentName:"p"},"event handlers")," when you need logic that applies regardless of how data is entered or modified. Use ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"./plugin-callouts"},"callouts"))," for UI-specific interactions like auto-filling fields or showing immediate feedback to users.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-prerequisites"},"\u2705 Prerequisites"),(0,r.kt)("p",null,"Before starting, review:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./developing-plugins"},"Developing Plug-Ins Without Affecting the Trunk")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./plugin-running-locally"},"Running Plug-ins Locally"))),(0,r.kt)("p",null,"You should already know how to create a plug-in, as this guide will not cover that in detail."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-overview"},"\ud83d\udccb Overview"),(0,r.kt)("p",null,"iDempiere's event handling system is built on top of the ",(0,r.kt)("strong",{parentName:"p"},"OSGi Event Admin Framework"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"IEventManager")," service, provided by the ",(0,r.kt)("inlineCode",{parentName:"p"},"org.adempiere.base")," bundle, enables you to register event handlers that replace the legacy ",(0,r.kt)("inlineCode",{parentName:"p"},"AD_ModelValidator")," table and ",(0,r.kt)("inlineCode",{parentName:"p"},"ModelValidator")," interface approach."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-implementation-methods"},"\ud83d\udccb Implementation Methods"),(0,r.kt)("h3",{id:"modern-approach-idempiere-9-event-annotation"},"Modern Approach (iDempiere 9+): Event Annotation"),(0,r.kt)("p",null,"Starting with ",(0,r.kt)("strong",{parentName:"p"},"iDempiere 9"),", you can use annotations to register event handlers. This is the simplest and recommended approach."),(0,r.kt)("p",null,"For details, see the section on ",(0,r.kt)("a",{parentName:"p",href:"#event-annotations-idempiere-9"},"Event Annotations")," below."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"creating-an-event-handler-class"},"Creating an Event Handler Class"),(0,r.kt)("h4",{id:"step-1-extend-abstracteventhandler"},"Step 1: Extend AbstractEventHandler"),(0,r.kt)("p",null,"Create a class that extends ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/idempiere/idempiere/blob/master/org.adempiere.base/src/org/adempiere/base/event/AbstractEventHandler.java"},(0,r.kt)("inlineCode",{parentName:"a"},"AbstractEventHandler")),". This base class simplifies event handler implementation and allows you to stop events by throwing a ",(0,r.kt)("inlineCode",{parentName:"p"},"RuntimeException"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example: ",(0,r.kt)("inlineCode",{parentName:"strong"},"MyEventHandler.java"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.example.eventhandler;\n\nimport org.adempiere.base.event.AbstractEventHandler;\nimport org.adempiere.base.event.IEventTopics;\nimport org.compiere.model.PO;\nimport org.compiere.model.MOrder;\nimport org.osgi.service.event.Event;\n\npublic class MyEventHandler extends AbstractEventHandler {\n\n    @Override\n    protected void initialize() {\n        // Register for events on the C_Order table\n        registerTableEvent(IEventTopics.PO_BEFORE_NEW, MOrder.Table_Name);\n        registerTableEvent(IEventTopics.PO_BEFORE_CHANGE, MOrder.Table_Name);\n        registerTableEvent(IEventTopics.PO_AFTER_NEW, MOrder.Table_Name);\n    }\n\n    @Override\n    protected void doHandleEvent(Event event) {\n        String type = event.getTopic();\n        PO po = getPO(event);\n        \n        if (po instanceof MOrder) {\n            MOrder order = (MOrder) po;\n            \n            if (type.equals(IEventTopics.PO_BEFORE_NEW)) {\n                // Validation logic before creating a new order\n                if (order.getC_BPartner_ID() <= 0) {\n                    throw new RuntimeException("Business Partner is required");\n                }\n            } else if (type.equals(IEventTopics.PO_BEFORE_CHANGE)) {\n                // Validation logic before updating an order\n                validateOrderTotal(order);\n            } else if (type.equals(IEventTopics.PO_AFTER_NEW)) {\n                // Post-creation actions\n                System.out.println("New order created: " + order.getDocumentNo());\n            }\n        }\n    }\n    \n    private void validateOrderTotal(MOrder order) {\n        // Your validation logic\n        if (order.getGrandTotal().signum() < 0) {\n            throw new RuntimeException("Order total cannot be negative");\n        }\n    }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example Project:")),(0,r.kt)("p",null,"For a complete working example of event handlers, see:",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hengsin/idempiere-examples/blob/main/org.idempiere.eventhandler.example/src/org/idempiere/eventhandler/example/Activator.java"},"idempiere-examples: Event Handler Example")),(0,r.kt)("h4",{id:"step-2-override-required-methods"},"Step 2: Override Required Methods"),(0,r.kt)("p",null,"Your event handler class must override two methods:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"initialize()"))," - Register the table events you're interested in"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"doHandleEvent(Event event)"))," - Implement your business logic")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Available Event Topics")," (from ",(0,r.kt)("inlineCode",{parentName:"p"},"IEventTopics")," interface):"),(0,r.kt)("h5",{id:"model-po-events"},"Model (PO) Events"),(0,r.kt)("p",null,"These events are triggered during record operations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_BEFORE_NEW")," - Before a new record is saved to the database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_AFTER_NEW")," - After a new record is saved to the database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_AFTER_NEW_REPLICATION")," - After new record replication"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_BEFORE_CHANGE")," - Before an existing record is updated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_AFTER_CHANGE")," - After an existing record is updated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_AFTER_CHANGE_REPLICATION")," - After record change replication"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_BEFORE_DELETE")," - Before a record is deleted"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_AFTER_DELETE")," - After a record is deleted"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_BEFORE_DELETE_REPLICATION")," - Before record deletion replication"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_POST_CREATE")," - Asynchronous event after record creation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_POST_UPDATE")," - Asynchronous event after record update"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_POST_DELETE")," - Asynchronous event after record deletion"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PO_ALL")," - Wildcard to match all PO events")),(0,r.kt)("h5",{id:"document-events"},"Document Events"),(0,r.kt)("p",null,"These events are triggered during document workflow actions:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Before Events:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_PREPARE")," - Before document is prepared"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_COMPLETE")," - Before document is completed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_VOID")," - Before document is voided"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_CLOSE")," - Before document is closed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_REACTIVATE")," - Before document is reactivated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_REVERSECORRECT")," - Before document reverse correction"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_REVERSEACCRUAL")," - Before document reverse accrual"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_BEFORE_POST")," - Before document is posted to accounting")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"After Events:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_PREPARE")," - After document is prepared"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_COMPLETE")," - After document is completed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_VOID")," - After document is voided"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_CLOSE")," - After document is closed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_REACTIVATE")," - After document is reactivated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_REVERSECORRECT")," - After document reverse correction"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_REVERSEACCRUAL")," - After document reverse accrual"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_AFTER_POST")," - After document is posted to accounting"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOC_ALL")," - Wildcard to match all document events")),(0,r.kt)("h5",{id:"import-events"},"Import Events"),(0,r.kt)("p",null,"Events triggered during data import processes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IMPORT_BEFORE_VALIDATE")," - Before all import records are validated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IMPORT_AFTER_VALIDATE")," - After all import records are validated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IMPORT_BEFORE_IMPORT")," - Before an import record is processed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IMPORT_AFTER_IMPORT")," - After an import record is processed")),(0,r.kt)("h5",{id:"process-events"},"Process Events"),(0,r.kt)("p",null,"Events triggered during process execution:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"BEFORE_PROCESS")," - Before starting a process, after it's prepared"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AFTER_PROCESS")," - After a process finishes, before commit"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"POST_PROCESS")," - After a process is committed (asynchronous)")),(0,r.kt)("h5",{id:"system-events"},"System Events"),(0,r.kt)("p",null,"Other system-level events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AFTER_LOGIN")," - After user login"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ACCT_FACTS_VALIDATE")," - During accounting facts validation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PREF_AFTER_LOAD")," - After preferences are loaded"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DOCACTION")," - During discovery of available document actions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"BROADCAST_MESSAGE")," - For broadcast messaging"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REQUEST_SEND_EMAIL")," - Before sending email for requests"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REPORT_SEND_EMAIL")," - Before sending email for reports (to prefill dialog variables)")),(0,r.kt)("admonition",{title:"Choosing the Right Event",type:"tip"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("strong",{parentName:"li"},"BEFORE")," events for validation and preventing operations"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("strong",{parentName:"li"},"AFTER")," events for post-processing and triggering subsequent actions"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("strong",{parentName:"li"},"POST")," events for asynchronous operations that shouldn't block the main transaction"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("strong",{parentName:"li"},"DOC")," events for document-specific workflow logic"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("strong",{parentName:"li"},"PO")," events for general record-level logic"))),(0,r.kt)("admonition",{title:"Showing Error Messages",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Instead of throwing an exception, you can call ",(0,r.kt)("inlineCode",{parentName:"p"},"addErrorMessage(String message)")," to display a user-friendly error message without a stack trace.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-registering-as-an-osgi-component"},"\ud83d\udd27 Registering as an OSGi Component"),(0,r.kt)("h3",{id:"option-a-using-annotations-recommended"},"Option A: Using Annotations (Recommended)"),(0,r.kt)("p",null,"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"@Component")," annotation to your event handler class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"import org.osgi.service.component.annotations.Component;\nimport org.osgi.service.component.annotations.Reference;\n\n@Component(\n    service = org.osgi.service.event.EventHandler.class,\n    immediate = true\n)\npublic class MyEventHandler extends AbstractEventHandler {\n    \n    @Reference\n    public void bindEventManager(IEventManager eventManager) {\n        super.setEventManager(eventManager);\n    }\n    \n    public void unbindEventManager(IEventManager eventManager) {\n        super.setEventManager(null);\n    }\n    \n    // ... rest of implementation\n}\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"./developing-plugins#event-handle"},"Event Handling with Annotations")," for more details."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"option-b-manual-component-definition"},"Option B: Manual Component Definition"),(0,r.kt)("p",null,"If not using annotations, create a component definition XML file manually."),(0,r.kt)("h4",{id:"step-1-create-osgi-inf-directory"},"Step 1: Create OSGI-INF Directory"),(0,r.kt)("p",null,"Create a directory named ",(0,r.kt)("inlineCode",{parentName:"p"},"OSGI-INF")," in your project root (this is the OSGi convention for component definitions)."),(0,r.kt)("h4",{id:"step-2-create-component-definition-xml"},"Step 2: Create Component Definition XML"),(0,r.kt)("p",null,"Create a file ",(0,r.kt)("inlineCode",{parentName:"p"},"OSGI-INF/eventhandler.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" \n               name="com.example.eventhandler.MyEventHandler">\n   <implementation class="com.example.eventhandler.MyEventHandler"/>\n   <reference \n      bind="bindEventManager" \n      unbind="unbindEventManager"\n      cardinality="1..1" \n      interface="org.adempiere.base.event.IEventManager" \n      name="IEventManager" \n      policy="static"/>\n</scr:component>\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"bindEventManager")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"unbindEventManager")," methods are inherited from the ",(0,r.kt)("inlineCode",{parentName:"p"},"AbstractEventHandler")," class."),(0,r.kt)("h4",{id:"step-3-update-manifestmf"},"Step 3: Update MANIFEST.MF"),(0,r.kt)("p",null,"Edit your ",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/MANIFEST.MF")," file to include the component definition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Service-Component: OSGI-INF/eventhandler.xml\n")),(0,r.kt)("p",null,"If you have multiple component definitions, you can use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Service-Component: OSGI-INF/*.xml\n")),(0,r.kt)("h4",{id:"step-4-enable-plugin-activation"},"Step 4: Enable Plugin Activation"),(0,r.kt)("p",null,"In your ",(0,r.kt)("inlineCode",{parentName:"p"},"MANIFEST.MF"),", ensure the plugin activation is enabled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Bundle-ActivationPolicy: lazy\n")),(0,r.kt)("p",null,'Also ensure in your plugin configuration that "Activate this plugin when one of its classes is loaded" is enabled.'),(0,r.kt)("h4",{id:"step-5-update-buildproperties"},"Step 5: Update build.properties"),(0,r.kt)("p",null,"Ensure ",(0,r.kt)("inlineCode",{parentName:"p"},"build.properties")," includes the OSGI-INF directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"bin.includes = META-INF/,\\\n               .,\\\n               OSGI-INF/\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-testing-your-event-handler"},"\ud83e\uddea Testing Your Event Handler"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Deploy your plug-in to iDempiere"),(0,r.kt)("li",{parentName:"ol"},"Start the iDempiere server"),(0,r.kt)("li",{parentName:"ol"},"Perform an action that triggers your event (e.g., create or update a Sales Order)"),(0,r.kt)("li",{parentName:"ol"},"Verify that your event handler logic executes"),(0,r.kt)("li",{parentName:"ol"},"Check logs for any output or errors")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-exporting-your-plug-in"},"\ud83d\udce6 Exporting Your Plug-in"),(0,r.kt)("p",null,"Before exporting your plug-in as a JAR:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open ",(0,r.kt)("inlineCode",{parentName:"li"},"build.properties")),(0,r.kt)("li",{parentName:"ol"},"Verify that ",(0,r.kt)("inlineCode",{parentName:"li"},"OSGI-INF/")," is listed in ",(0,r.kt)("strong",{parentName:"li"},"Binary Build")),(0,r.kt)("li",{parentName:"ol"},"Ensure your component definition XML files are included"),(0,r.kt)("li",{parentName:"ol"},"Test the exported JAR in a clean iDempiere instance")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-video-tutorial"},"\ud83c\udfa5 Video Tutorial"),(0,r.kt)("p",null,"Watch this video walkthrough:",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=zc_Ye8WZ-jc"},"https://www.youtube.com/watch?v=zc_Ye8WZ-jc")),(0,r.kt)("p",null,"Additional tutorial:",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=lVPPnyiBvV8"},"https://www.youtube.com/watch?v=lVPPnyiBvV8")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-related-resources"},"\ud83d\udd17 Related Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/idempiere/idempiere/blob/master/org.adempiere.base/src/org/adempiere/base/event/AbstractEventHandler.java"},"AbstractEventHandler Class")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/idempiere/idempiere/blob/master/org.adempiere.base/src/org/adempiere/base/event/IEventTopics.java"},"IEventTopics Interface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/idempiere/idempiere/blob/master/org.adempiere.base/src/org/adempiere/base/event/IEventManager.java"},"IEventManager Interface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://osgi.org/specification/osgi.cmpn/7.0.0/service.event.html"},"OSGi Event Admin Framework")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.idempiere.org/en/NF9_OSGi_New_Process_Factory"},"iDempiere 9 Event Annotations"))))}u.isMDXComponent=!0}}]);