"use strict";(self.webpackChunkidempiere_id_github_io=self.webpackChunkidempiere_id_github_io||[]).push([[4134],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||r;return n?i.createElement(g,a(a({ref:t},c),{},{components:n})):i.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<r;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=n(7462),o=(n(7294),n(3905));const r={title:"Developing Plug-ins Without Affecting the Core",sidebar_label:"Plugin Workflow (Isolated from Core)",sidebar_position:1,description:"How to develop iDempiere plug-ins independently from the core codebase"},a="Developing Plug-ins Without Affecting the Core",l={unversionedId:"basic-development/plugin-development/developing-plugins",id:"basic-development/plugin-development/developing-plugins",title:"Developing Plug-ins Without Affecting the Core",description:"How to develop iDempiere plug-ins independently from the core codebase",source:"@site/docs/basic-development/plugin-development/developing-plugins.md",sourceDirName:"basic-development/plugin-development",slug:"/basic-development/plugin-development/developing-plugins",permalink:"/docs/basic-development/plugin-development/developing-plugins",draft:!1,editUrl:"https://github.com/idempiere/idempiere.github.io/tree/main/docs/basic-development/plugin-development/developing-plugins.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Developing Plug-ins Without Affecting the Core",sidebar_label:"Plugin Workflow (Isolated from Core)",sidebar_position:1,description:"How to develop iDempiere plug-ins independently from the core codebase"},sidebar:"tutorialSidebar",previous:{title:"Developing Plug-Ins",permalink:"/docs/category/developing-plug-ins"},next:{title:"Running Plug-ins Locally",permalink:"/docs/basic-development/plugin-development/plugin-running-locally"}},p={},s=[{value:"\ud83e\uddf0 Prerequisites",id:"-prerequisites",level:2},{value:"\ud83d\udcda Recommended Workflow",id:"-recommended-workflow",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"developing-plug-ins-without-affecting-the-core"},"Developing Plug-ins Without Affecting the Core"),(0,o.kt)("p",null,"This guide explains how to develop plug-ins ",(0,o.kt)("strong",{parentName:"p"},"separately from the iDempiere core"),", ensuring clean separation between your customizations and the official core codebase. This approach is ideal for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Building plug-ins for personal, educational, or testing purposes"),(0,o.kt)("li",{parentName:"ul"},"Implementing customer-specific extensions without modifying core code"),(0,o.kt)("li",{parentName:"ul"},"Enabling clean merges of iDempiere updates without interference from plug-in code")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"-prerequisites"},"\ud83e\uddf0 Prerequisites"),(0,o.kt)("p",null,"Before you begin, ensure you have:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A working iDempiere development environment set up in ",(0,o.kt)("strong",{parentName:"li"},"Eclipse"),"."),(0,o.kt)("li",{parentName:"ul"},"Version control configured.")),(0,o.kt)("hr",null),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Instead of starting from scratch, you might want to use the scaffolding tool from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/saulojg/idempiere-plugin-scaffold/"},"iDempiere Plugin Scaffold")," instead. This tool provides a pre-configured structure to help you quickly set up your plug-in project, saving time and effort.")),(0,o.kt)("h2",{id:"-recommended-workflow"},"\ud83d\udcda Recommended Workflow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In Eclipse, go to:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"File \u2192 New \u2192 Other\u2026 \u2192 Plug-in Project\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Provide a custom project name (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"com.yourcompany.pluginname"),").")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Uncheck")," \u201cUse default location\u201d and choose a custom folder outside the iDempiere core repository, such as:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"idempiere-plugins/your-plugin-name\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Set the plug-in target platform to ",(0,o.kt)("strong",{parentName:"p"},"Equinox")," and click Next")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Choose a compatible Java execution environment (e.g., JavaSE-17 or later).")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},'Disable options like "Generate an activator".')),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Once created, connect the project to version control:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"Right-click the project \u2192 Team \u2192 Share Project\n")),(0,o.kt)("p",{parentName:"li"},"Create or select a Git repository in your plugin directory."))),(0,o.kt)("hr",null),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Instead of creating a Git repository for each of your plug-ins and fragments, you can also follow this approach:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Create a directory on your hard drive to contain all your plug-ins and fragments."),(0,o.kt)("li",{parentName:"ul"},"Initialize a single Git repository in this directory."),(0,o.kt)("li",{parentName:"ul"},"Place all newly created plug-ins and fragments in this repository directory, skipping the step of creating separate repositories for each."),(0,o.kt)("li",{parentName:"ul"},"This way, you maintain one consolidated repository containing all your files.")),(0,o.kt)("p",{parentName:"admonition"},"By following these tips, your plug-in development process becomes more streamlined and easier to manage.")))}m.isMDXComponent=!0}}]);